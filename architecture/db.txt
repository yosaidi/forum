Users ──┐
        ├─→ Posts ──┐
        │           ├─→ Comments
        │           └─→ Votes
        └─→ Sessions
        
Categories ─→ Posts

1- USER TABLE:

users (
    id INTEGER PRIMARY KEY,          -- Unique user identifier
    username VARCHAR(50) UNIQUE,     -- Display name (must be unique)
    email VARCHAR(100) UNIQUE,       -- Login email (must be unique)
    password_hash VARCHAR(255),      -- Encrypted password (never store plain text!)
    created_at DATETIME,             -- When user registered
    updated_at DATETIME              -- Last profile update
)

Purpose: Stores all user accounts and authentication data

2- CATEGORIES TABLE:

categories (
    id INTEGER PRIMARY KEY,          -- Unique category identifier
    name VARCHAR(50) UNIQUE,         -- Category slug (e.g., "programming")
    description TEXT,                -- Human-readable description
    created_at DATETIME              -- When category was created
)

Purpose: Forum categories/sections (like subreddits)

3- POSTS TABLE:

posts (
    id INTEGER PRIMARY KEY,          -- Unique post identifier
    title VARCHAR(255),              -- Post title
    content TEXT,                    -- Post content/body
    user_id INTEGER,                 -- Who created this post (links to users.id)
    category_id INTEGER,             -- Which category (links to categories.id)
    likes INTEGER DEFAULT 0,         -- Cached like count for performance
    dislikes INTEGER DEFAULT 0,      -- Cached dislike count for performance
    created_at DATETIME,             -- When post was created
    updated_at DATETIME,             -- Last edit time
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (category_id) REFERENCES categories(id)
)

Purpose: Main forum posts/discussions

4- COMMENTS TABLE:

comments (
    id INTEGER PRIMARY KEY,          -- Unique comment identifier
    content TEXT,                    -- Comment text
    user_id INTEGER,                 -- Who wrote this comment
    post_id INTEGER,                 -- Which post this belongs to
    likes INTEGER DEFAULT 0,         -- Cached like count
    dislikes INTEGER DEFAULT 0,      -- Cached dislike count
    created_at DATETIME,             -- When comment was posted
    updated_at DATETIME,             -- Last edit time
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (post_id) REFERENCES posts(id)
)

Purpose: User replies to posts

5- VOTES TABLE:

votes (
    id INTEGER PRIMARY KEY,          -- Unique vote identifier
    user_id INTEGER,                 -- Who voted
    post_id INTEGER,                 -- Vote on post (NULL if voting on comment)
    comment_id INTEGER,              -- Vote on comment (NULL if voting on post)
    vote_type VARCHAR(10),           -- "like" or "dislike"
    created_at DATETIME,             -- When vote was cast
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (post_id) REFERENCES posts(id),
    FOREIGN KEY (comment_id) REFERENCES comments(id),
    UNIQUE(user_id, post_id, comment_id)  -- Prevent duplicate votes
)

Purpose: Tracks likes/dislikes on posts and comments

6- Sessions Table:

sessions (
    id VARCHAR(255) PRIMARY KEY,     -- Session UUID
    user_id INTEGER,                 -- Which user this session belongs to
    expires_at DATETIME,             -- When session expires
    created_at DATETIME,             -- When session was created
    FOREIGN KEY (user_id) REFERENCES users(id)
)

Purpose: Manages user login sessions (remembers who's logged in)
