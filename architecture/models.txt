1- User Model (user.go)

Fields:
- ID, Username, Email, PasswordHash, CreatedAt, UpdatedAt

Purpose:
Represents forum users and handles authentication, registration, and user lookup.

Main Functions:
- Create() error                  → Insert new user into DB
- GetByUsername(username string) error
- GetByEmail(email string) error
- GetByID(id int) error
- Exists() (bool, error)          → Check if username/email already exists


2- Post Model (post.go)

Fields:
- ID, Title, Content, UserID, Username, CategoryID, CategoryName
- Likes, Dislikes, CommentCount, UserVote, CreatedAt, UpdatedAt

Purpose:
Represents posts in the forum, handles CRUD operations, fetching posts, and user votes.

Main Functions:
- Create() error
- GetByID(id int, userID *int) error
- GetAllPosts(userID *int, categoryFilter string, limit, offset int) ([]Post, error)
- getUserVote(userID int)         → Retrieves the current user’s vote on the post
- GetAllCategories() ([]Category, error)


3- Category Model (post.go)

Fields:
- ID, Name, Description, PostCount

Purpose:
Represents categories and tracks the number of posts in each.

Main Functions:
- Included in GetAllCategories() of Post


4- Comment Model (comment.go)

Fields:
- ID, Content, UserID, Username, PostID
- Likes, Dislikes, UserVote, CreatedAt, UpdatedAt

Purpose:
Represents comments on posts, handles CRUD, vote tracking, and validation.

Main Functions:
- Create() error
- GetByID(id int, userID *int) error
- GetCommentsByPostID(postID int, userID *int, limit, offset int) ([]Comment, error)
- GetUserComments(userID int, limit, offset int) ([]Comment, error)
- Update() error
- Delete() error
- UpdateVoteCounts() error
- refreshVoteCounts() error
- getUserVote(userID int)
- Validate() error
- CanEdit(userID int) bool
- CanDelete(userID int) bool
- GetCommentCount(postID int) (int, error)


5- Vote Model (vote.go)

Fields:
- ID, UserID, PostID, CommentID, VoteType, CreatedAt

Purpose:
Handles likes/dislikes on posts and comments; prevents duplicate votes.

Main Functions:
- TogglePostVote(userID, postID int, voteType string) (*VoteResult, error)
- ToggleCommentVote(userID, commentID int, voteType string) (*VoteResult, error)
- GetUserLikedPosts(userID int, limit, offset int) ([]Post, error)
- GetVoteStats(userID int) (*VoteStats, error)
- createPostVote(tx *sql.Tx, userID, postID int, voteType string) error
- removePostVote(tx *sql.Tx, userID, postID int) error
- updatePostVote(tx *sql.Tx, userID, postID int, voteType string) error
- updatePostVoteCounts(tx *sql.Tx, postID int) error
- getPostVoteCounts(tx *sql.Tx, postID int) (int, int, error)
- createCommentVote(tx *sql.Tx, userID, commentID int, voteType string) error
- removeCommentVote(tx *sql.Tx, userID, commentID int) error
- updateCommentVote(tx *sql.Tx, userID, commentID int, voteType string) error
- updateCommentVoteCounts(tx *sql.Tx, commentID int) error
- getCommentVoteCounts(tx *sql.Tx, commentID int) (int, int, error)
- CleanupOrphanedVotes() error
